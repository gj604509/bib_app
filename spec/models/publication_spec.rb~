require 'spec_helper'

describe Publication do

  let(:user) { FactoryGirl.create(:user) }
  before { @publication = user.publications.build(title: "title", pub_type: "conference",pub_name: "namePublication",year: "2012", month: "1", pages: "151", notes: "this is the note about this conference", summary: "lorem ipsum") }

  subject { @publication }

  it { should respond_to(:title) }
  it { should respond_to(:user_id) }
  it { should respond_to(:user) }
  its(:user) { should == user }
  
  it { should be_valid }

  describe "when user_id is not present" do
    before { @publication.user_id = nil }
    it { should_not be_valid }
  end
  
  describe "when user_id is not present" do
    before { @publication.user_id = nil }
    it { should_not be_valid }
  end

  describe "with blank title" do
    before { @publication.title = " " }
    it { should_not be_valid }
  end
  
  describe "with title is too long" do
    before { @publication.title = "a" * 257 }
    it { should_not be_valid }
  end
  
  describe "with blank year" do
    before { @publication.year = " " }
    it { should_not be_valid }
  end
  
  describe "with year invalid" do
  	before { @publication.year = "1001" }
    it { should_not be_valid }
    before { @publication.year = "3015" }
    it { should_not be_valid }
    before { @publication.year = "aaaa" }
    it { should_not be_valid }
  end
  
  describe "with year valid" do
    before { 
    	@max = Time.now.year
  		puts @max
    	@publication.year = @max
    }
    it { should be_valid }
  end
  
  describe "with invalid month number" do
    before { @publication.month = " " }
    it { should_not be_valid }
    before { @publication.month = "0" }
    it { should_not be_valid }
    before { @publication.month = "13" }
    it { should_not be_valid }
  end
  
  describe "with month valid" do
    before { @publication.month = "5" }
    it { should be_valid }
  end
  
  describe "with number of pages invalid" do
  	before { @publication.pages = " "}
  	it {should_not be_valid}
  	before { @publication.pages = "0"}
  	it {should_not be_valid}
  	before { @publication.pages = "aaa"}
  	it {should_not be_valid}
  end
  
  describe "with number of pages valid" do
    before { @publication.pages = "54" }
    it { should be_valid }
  end
  
  describe "with blank summary" do
    before { @publication.summary = " " }
    it { should_not be_valid }
  end
 
  describe "accessible attributes" do
    it "should not allow access to user_id" do
      expect do
        Publication.new(user_id: user.id)
      end.to raise_error(ActiveModel::MassAssignmentSecurity::Error)
    end    
  end
  
  describe "when user_id is not present" do
    before { @publication.user_id = nil }
    it { should_not be_valid }
  end
end

